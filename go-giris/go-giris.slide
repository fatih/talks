Go programlama dili
14 Mar 2015

Fatih Arslan
Software Engineer, Gopher, Coffee Geek
https://github.com/fatih
fatih@arslan.io
@ftharsln

* Go nedir?

- Ken Thompson, Rob Pike ve Robert Griesiemer tarafindan ilk adımlari atıldı (2007)
- 10 Kasım 2009 yılında tanıtıldı, 28 Mart 2012'da Go 1.0 yayımlandı
- Genç ve yeni bir dil
- Açık Kaynak
- Basit ama güçlü
- C ailesine yakın dil tanımı
.image gophers.jpg

* Neden Go? (Sorunlar)

Büyük ölçekteki yazılımlari geliştirmenin zorluğu üzerine çıkmıştir. Nedir bu
sorunlar?

- Yavaş inşa sistemleri (build systems)

.image compiling.png

* Neden Go? (Sorunlar)

- Kontrol altına alınamayan bağımlılıklar

.image dependencies.jpg

* Neden Go? (Sorunlar)

- Insanlarin bir dilin özelliklerin belirli alt kümelerini kullanması

.image features.jpg

* Neden Go? (Sorunlar)

- Kod'u anlamak ve okumak zor
- Güncelleme maliyeti
- Makineler hızlı, ama yazılım geliştirme hala yavaş
- Eşzamanlı (concurrent) program geliştırme temelleri bir çok dilde yeterince gelişmemiş
- Google'deki yavaş ve hantal yazılım geliştirme'yi ortadan kaldırmak
- Büyük ölçekteki yazılımları kontrol altında tutmak

* Neden Go? (Çözumler)

- Büyük bir Go programini saniyeler içinde derleyebiliyorsunuz
- Sözdizimi (syntax) anlaşılır
- Temelleri basitlik üzerine kurulan bir düşünce yapısI
- Bağımlılık çözümu kolay ve basit (C tipi include dosyalari olmaksızın)
- Dahili eşzaman  yazılım temelleri (channels, goroutines, select)
- Static typed ama dynamic typed gibi hissediliyor
- Test, belgelendirme, bağımlılık yönetimi, vs.. ekosistemi


* Go'yi kimler kullaniyor?

- Google
- Apple
- Facebook
- Twitter
- Microsoft
- Amazon
- Github
- Ubuntu (Canonical)
- Dropbox
- ve daha fazlası: https://github.com/golang/go/wiki/GoUsers

* Ilk Go uygulamamız


- Her Go uygulaması `package` ile adlandırdığımız yapılardan oluşuyor. 
- Bir uygulama `main` paketi ile ayağa kalkar ve çalışır.
- Başka paketleri kullanabilmek icin `import` ile eklemek gerekiyor.
- Baş harfi büyük karakter ile başlayan tanımlamaları kullanabiliyorsunuz.  Paketin içindeki büyük harfle başlamayan her şey gizli ve kullanılamaz.

Örnek:

.play code/main.go


* Türler

.play code/data/data.go /START OMIT/,/END OMIT/

* Değişkenler, çoklu sonuçlar, sıfır değerler, sabitler

.play code/vars/vars.go /START OMIT/,/END OMIT/

* Akış kontrolleri

Basit akışlar:

- if, else
- for, break, continue, fallthrough
- switch
- return
- goto

Gelişmiş akışlar:

- range
- select
- go
- defer

* Defer

defer deyimi, kendisini çevreleyen fonksiyon dönene kadar fonksiyonun
çalışmasını erteler.

.play code/defer/defer.go

* Defer 2 

.play -edit code/defer2/defer2.go /START OMIT/,/END OMIT/

* Defer 2 (çözüm)

	func deadlock(a int) {
		mu.Lock()
		if 4 < a {
			mu.Unlock()
			return
		}
		mu.Unlock()
	}

Daha iyi:

	func deadlock(a int) {
		mu.Lock()
		defer mu.Unlock()

		if 4 < a {
			return
		}
	}


* Go araçlari (go get, gofmt, go test, golint, vs...)
* Koding'de Go nasil kullanılıyor? Deploy nasıl yapılır?
* Editör desteği ve uyumluluğu
* Go camiasi (go-nuts, irc, go-türkiye ...)
* Go ne degildir ve ne icin kullanilmaz
* Nasil Go ogrenemeye baslayabilirim?
* Go nasil kurulur?
* Kaynaklar, kitaplar, öğrenilmesi gerekenler ...
* Soru/Cevap

